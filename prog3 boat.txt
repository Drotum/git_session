Q3

SQL

CREATE TABLE BOAT (
 BID VARCHAR(6) NOT NULL,
 BNAME VARCHAR(20),
 COLOUR VARCHAR(10),
 PRIMARY KEY(BID)
);

CREATE TABLE SAILOR (
 SID VARCHAR(6) NOT NULL,
 SNAME VARCHAR(20),
 AGE VARCHAR(3),
 RATING VARCHAR(2),
 PRIMARY KEY(SID)
);

CREATE TABLE RESERVES (
 BID VARCHAR(6),
 SID VARCHAR(6),
 DAY VARCHAR(10),
 FOREIGN KEY(BID) REFERENCES BOAT(BID) ON DELETE CASCADE,
 FOREIGN KEY(SID) REFERENCES SAILOR(SID) ON DELETE CASCADE
);

INSERT INTO BOAT VALUES('01', 'ABC', 'RED');
INSERT INTO BOAT VALUES('02', 'XYZ', 'YELLOW');
INSERT INTO BOAT VALUES('03', 'PQR', 'GREEN');
INSERT INTO BOAT VALUES('04', 'LMN', 'BLACK');
INSERT INTO BOAT VALUES('05', 'DEF', 'BLUE');

INSERT INTO SAILOR VALUES('10', 'RAM', '30', '5');
INSERT INTO SAILOR VALUES('20', 'RAVI', '25', '4');
INSERT INTO SAILOR VALUES('30', 'MISHRA', '22', '3');
INSERT INTO SAILOR VALUES('40', 'CHANDRA', '24', '2');
INSERT INTO SAILOR VALUES('50', 'SHIVA', '36', '1');
INSERT INTO SAILOR VALUES('60', 'KRISHNA', '40', '6');

INSERT INTO RESERVES VALUES('01', '20', 'MONDAY');
INSERT INTO RESERVES VALUES('02', '30', 'TUESDAY');
INSERT INTO RESERVES VALUES('03', '50', 'WEDNESDAY');
INSERT INTO RESERVES VALUES('04', '10', 'THURSDAY');
INSERT INTO RESERVES VALUES('05', '20', 'FRIDAY');

SELECT * FROM RESERVES;

SELECT * FROM SAILOR;

SELECT * FROM BOAT;

SELECT BID FROM RESERVES WHERE SID IN (SELECT SID FROM SAILOR WHERE SNAME = 'RAM');

SELECT BID, SNAME FROM RESERVES r JOIN SAILOR s ON (r.SID = s.SID);

SELECT COUNT(BID), SID FROM RESERVES GROUP BY SID;


MONGO

db.createCollection("BOATRES");

db.BOATRES.insert({"BID": 9988, "BNAME": 'ABC', "COLOUR": 'Black', "SNAME": 'John', "SID": 1234, "DAY": '2017-12-25'});
db.BOATRES.insert({"BID": 8877, "BNAME": 'DEF', "COLOUR": 'Black', "SNAME": 'Smith', "SID": 4567, "DAY": '2017-11-24'});

db.BOATRES.find({"SNAME": 'Sucre'}).count();

db.BOATRES.find({"COLOUR": 'Black'}).pretty();


plsql

SET SERVEROUTPUT ON
DECLARE
 n number:=&n;
 j number:=2;
 counter number:=0;
BEGIN
 WHILE(j<=n/2) loop

 if mod(n,j)=0 then
 dbms_output.put_line(n ||' is not prime number');
 counter:=1;
 exit ;
 else
 j:=j+1;
 end if;
 end loop;

 if counter=0 then
 dbms_output.put_line( n || ' is a prime number');
 end if;
end;
/
