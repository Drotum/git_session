Q1

SQL

CREATE TABLE employee (
 ssn VARCHAR(6),
 name VARCHAR(10),
 deptno INT,
 PRIMARY KEY(ssn)
);

CREATE TABLE project (
 projectno VARCHAR(10),
 projectarea VARCHAR(20),
 PRIMARY KEY(projectno)
);

CREATE TABLE app (
 usn VARCHAR(6),
 projectno VARCHAR(10),
 FOREIGN KEY(usn) REFERENCES employee(ssn),
 FOREIGN KEY(projectno) REFERENCES project(projectno)
);

INSERT INTO employee VALUES('01', 'abc', 10);
INSERT INTO employee VALUES('02', 'xyz', 20);
INSERT INTO employee VALUES('03', 'pqr', 30);
INSERT INTO employee VALUES('04', 'lmn', 40);

INSERT INTO project VALUES('100', 'database');
INSERT INTO project VALUES('200', 'network');
INSERT INTO project VALUES('300', 'android');

INSERT INTO app VALUES('01', '100');
INSERT INTO app VALUES('02', '200');
INSERT INTO app VALUES('03', '300');
INSERT INTO app VALUES('01', '200');

SELECT * FROM employee;

SELECT * FROM project;

SELECT * FROM app;

SELECT ssn FROM employee WHERE ssn = (SELECT usn FROM app WHERE projectno = (SELECT projectno FROM project WHERE projectarea = 'database'));

SELECT COUNT(ssn), deptno FROM employee GROUP BY deptno;

UPDATE app SET projectno = '200' WHERE usn = '03';

SELECT * FROM app;



Mongo

db.createCollection("EMPLOYEE");

db.EMPLOYEE.insert({"SSN": 4567, "Name": 'James', "DeptNo": 'XYZ', "ProjectNo": 101});
db.EMPLOYEE.insert({"SSN": 3256, "Name": 'Jack', "DeptNo": 'XYZ', "ProjectNo": 102});

db.EMPLOYEE.find().pretty();

db.EMPLOYEE.find({"DeptNo": 'XYZ'}).pretty();

db.EMPLOYEE.find({"ProjectNo": 104}).pretty();






Q2

SQL

CREATE TABLE part (
 pno NUMBER(10),
 pname VARCHAR(20),
 colour VARCHAR(20),
 PRIMARY KEY(pno)
);

CREATE TABLE supplier (
 sno NUMBER(10),
 sname VARCHAR(20),
 address VARCHAR(20),
 PRIMARY KEY(sno)
);

CREATE TABLE supply (
 pno NUMBER(10),
 sno NUMBER(10),
 quantity VARCHAR(20),
 PRIMARY KEY(pno, sno),
 FOREIGN KEY(pno) REFERENCES part(pno) ON DELETE CASCADE,
 FOREIGN KEY(sno) REFERENCES supplier(sno) ON DELETE CASCADE
);

INSERT INTO part VALUES(1, 'plug', 'black');
INSERT INTO part VALUES(2, 'bolt', 'blue');
INSERT INTO part VALUES(3, 'nut', 'green');

INSERT INTO supplier VALUES(10, 'Anoop', 'udupi');
INSERT INTO supplier VALUES(15, 'Bharath', 'mangalore');
INSERT INTO supplier VALUES(20, 'Ram', 'bangalore');

INSERT INTO supply VALUES(1, 10, 50);
INSERT INTO supply VALUES(2, 10, 30);
INSERT INTO supply VALUES(1, 15, 70);
INSERT INTO supply VALUES(3, 15, 40);
INSERT INTO supply VALUES(1, 20, 55);
INSERT INTO supply VALUES(2, 20, 65);
INSERT INTO supply VALUES(3, 20, 75);

SELECT * FROM part;

SELECT * FROM supply;

SELECT * FROM supplier;

SELECT pno FROM supply WHERE sno IN (SELECT sno FROM supplier WHERE sname = 'Ram');

SELECT sname, pname FROM supplier, supply, part WHERE pname = 'bolt' AND supply.sno = supplier.sno AND part.pno = supply.pno;

DELETE FROM part WHERE colour = 'green';



Mongo

db.createCollection("WAREHOUSE");

db.WAREHOUSE.insert({"PNO": 1947, "Pname": 'bolts', "Colour": 'Black', "SNO": 1234, "Sname": 'ABC', "Address": 'blore'});
db.WAREHOUSE.insert({"PNO": 1950, "Pname": 'chain', "Colour": 'Blue', "SNO": 4567, "Sname": 'DEF', "Address": 'chen'});

db.WAREHOUSE.update({"PNO": 1950}, {$set: {"PNO": 2017}}, {multi: true});
db.WAREHOUSE.find().pretty();

db.WAREHOUSE.find({"PNO": 2017}).pretty();







Q3

SQL

CREATE TABLE BOAT (
 BID VARCHAR(6) NOT NULL,
 BNAME VARCHAR(20),
 COLOUR VARCHAR(10),
 PRIMARY KEY(BID)
);

CREATE TABLE SAILOR (
 SID VARCHAR(6) NOT NULL,
 SNAME VARCHAR(20),
 AGE VARCHAR(3),
 RATING VARCHAR(2),
 PRIMARY KEY(SID)
);

CREATE TABLE RESERVES (
 BID VARCHAR(6),
 SID VARCHAR(6),
 DAY VARCHAR(10),
 FOREIGN KEY(BID) REFERENCES BOAT(BID) ON DELETE CASCADE,
 FOREIGN KEY(SID) REFERENCES SAILOR(SID) ON DELETE CASCADE
);

INSERT INTO BOAT VALUES('01', 'ABC', 'RED');
INSERT INTO BOAT VALUES('02', 'XYZ', 'YELLOW');
INSERT INTO BOAT VALUES('03', 'PQR', 'GREEN');
INSERT INTO BOAT VALUES('04', 'LMN', 'BLACK');
INSERT INTO BOAT VALUES('05', 'DEF', 'BLUE');

INSERT INTO SAILOR VALUES('10', 'RAM', '30', '5');
INSERT INTO SAILOR VALUES('20', 'RAVI', '25', '4');
INSERT INTO SAILOR VALUES('30', 'MISHRA', '22', '3');
INSERT INTO SAILOR VALUES('40', 'CHANDRA', '24', '2');
INSERT INTO SAILOR VALUES('50', 'SHIVA', '36', '1');
INSERT INTO SAILOR VALUES('60', 'KRISHNA', '40', '6');

INSERT INTO RESERVES VALUES('01', '20', 'MONDAY');
INSERT INTO RESERVES VALUES('02', '30', 'TUESDAY');
INSERT INTO RESERVES VALUES('03', '50', 'WEDNESDAY');
INSERT INTO RESERVES VALUES('04', '10', 'THURSDAY');
INSERT INTO RESERVES VALUES('05', '20', 'FRIDAY');

SELECT * FROM RESERVES;

SELECT * FROM SAILOR;

SELECT * FROM BOAT;

SELECT BID FROM RESERVES WHERE SID IN (SELECT SID FROM SAILOR WHERE SNAME = 'RAM');

SELECT BID, SNAME FROM RESERVES r JOIN SAILOR s ON (r.SID = s.SID);

SELECT COUNT(BID), SID FROM RESERVES GROUP BY SID;


MONGO

db.createCollection("BOATRES");

db.BOATRES.insert({"BID": 9988, "BNAME": 'ABC', "COLOUR": 'Black', "SNAME": 'John', "SID": 1234, "DAY": '2017-12-25'});
db.BOATRES.insert({"BID": 8877, "BNAME": 'DEF', "COLOUR": 'Black', "SNAME": 'Smith', "SID": 4567, "DAY": '2017-11-24'});

db.BOATRES.find({"SNAME": 'Sucre'}).count();

db.BOATRES.find({"COLOUR": 'Black'}).pretty();












Q4


SQL

CREATE TABLE Customer (
 Cid VARCHAR(3),
 fname VARCHAR(15),
 lname VARCHAR(15),
 City VARCHAR(10),
 Phone VARCHAR(10),
 PRIMARY KEY(Cid)
);

CREATE TABLE Branch (
 Bid VARCHAR(3),
 Bname VARCHAR(10),
 City VARCHAR(10),
 PRIMARY KEY(Bid)
);

CREATE TABLE Account (
 Acc_ID VARCHAR(6),
 Cid VARCHAR(3),
 Bid VARCHAR(3),
 Balance NUMBER(10),
 Atype VARCHAR(2),
 PRIMARY KEY(Acc_ID),
 FOREIGN KEY(Cid) REFERENCES Customer(Cid),
 FOREIGN KEY(Bid) REFERENCES Branch(Bid)
);

CREATE TABLE Transaction (
 Tid VARCHAR(6),
 AccID VARCHAR(6),
 TType VARCHAR(3),
 Amount NUMBER(10),
 PRIMARY KEY(Tid),
 FOREIGN KEY(AccID) REFERENCES Account(Acc_ID)
);

INSERT INTO Customer VALUES('C01', 'AAA', 'YYY', 'DELHI', '9886066466');
INSERT INTO Customer VALUES('C02', 'BBB', 'XXX', 'DELHI', '9886166466');
INSERT INTO Customer VALUES('C03', 'CCC', 'ZZZ', 'DELHI', '9886466466');
INSERT INTO Customer VALUES('C04', 'DDD', 'PPP', 'DELHI', '9886366466');
INSERT INTO Customer VALUES('C05', 'EEE', 'SSS', 'DELHI', '9886266466');

INSERT INTO Branch VALUES('B01', 'MSR Nagar', 'Bangalore');
INSERT INTO Branch VALUES('B02', 'Jayanagar', 'Bangalore');
INSERT INTO Branch VALUES('B03', 'BTM Layout', 'Bangalore');

INSERT INTO Account VALUES('A01', 'C01', 'B01', 1000, 'SA');
INSERT INTO Account VALUES('A02', 'C02', 'B02', 2000, 'CA');
INSERT INTO Account VALUES('A03', 'C03', 'B03', 3000, 'SA');
INSERT INTO Account VALUES('A04', 'C04', 'B01', 4000, 'CA');
INSERT INTO Account VALUES('A05', 'C05', 'B02', 5000, 'SA');

INSERT INTO Transaction VALUES('T01', 'A01', 'D', 500);
INSERT INTO Transaction VALUES('T02', 'A02', 'W', 1000);
INSERT INTO Transaction VALUES('T03', 'A03', 'D', 1500);
INSERT INTO Transaction VALUES('T04', 'A04', 'W', 2000);
INSERT INTO Transaction VALUES('T05', 'A05', 'D', 2500);

SELECT * FROM Customer;
SELECT * FROM Branch;
SELECT * FROM Account;
SELECT * FROM Transaction;

SELECT * FROM Account WHERE Atype = 'SA';
SELECT * FROM Account WHERE Balance > 2000;

UPDATE Account SET Balance = Balance + 500 WHERE Acc_ID = 'A01';

DELETE FROM Transaction WHERE TType = 'W';

MONGO

db.createCollection("Customer");
db.createCollection("Branch");
db.createCollection("Account");
db.createCollection("Transaction");

db.Customer.insert({"Cid": "C01", "fname": "AAA", "lname": "YYY", "City": "DELHI", "Phone": "9886066466"});
db.Customer.insert({"Cid": "C02", "fname": "BBB", "lname": "XXX", "City": "DELHI", "Phone": "9886166466"});
db.Customer.insert({"Cid": "C03", "fname": "CCC", "lname": "ZZZ", "City": "DELHI", "Phone": "9886466466"});
db.Customer.insert({"Cid": "C04", "fname": "DDD", "lname": "PPP", "City": "DELHI", "Phone": "9886366466"});
db.Customer.insert({"Cid": "C05", "fname": "EEE", "lname": "SSS", "City": "DELHI", "Phone": "9886266466"});

db.Branch.insert({"Bid": "B01", "Bname": "MSR Nagar", "City": "Bangalore"});
db.Branch.insert({"Bid": "B02", "Bname": "Jayanagar", "City": "Bangalore"});
db.Branch.insert({"Bid": "B03", "Bname": "BTM Layout", "City": "Bangalore"});

db.Account.insert({"Acc_ID": "A01", "Cid": "C01", "Bid": "B01", "Balance": 1000, "Atype": "SA"});
db.Account.insert({"Acc_ID": "A02", "Cid": "C02", "Bid": "B02", "Balance": 2000, "Atype": "CA"});
db.Account.insert({"Acc_ID": "A03", "Cid": "C03", "Bid": "B03", "Balance": 3000, "Atype": "SA"});
db.Account.insert({"Acc_ID": "A04", "Cid": "C04", "Bid": "B01", "Balance": 4000, "Atype": "CA"});
db.Account.insert({"Acc_ID": "A05", "Cid": "C05", "Bid": "B02", "Balance": 5000, "Atype": "SA"});

db.Transaction.insert({"Tid": "T01", "AccID": "A01", "TType": "D", "Amount": 500});
db.Transaction.insert({"Tid": "T02", "AccID": "A02", "TType": "W", "Amount": 1000});
db.Transaction.insert({"Tid": "T03", "AccID": "A03", "TType": "D", "Amount": 1500});
db.Transaction.insert({"Tid": "T04", "AccID": "A04", "TType": "W", "Amount": 2000});
db.Transaction.insert({"Tid": "T05", "AccID": "A05", "TType": "D", "Amount": 2500});

db.Customer.find().pretty();
db.Branch.find().pretty();
db.Account.find().pretty();
db.Transaction.find().pretty();

db.Account.find({"Atype": "SA"}).pretty();
db.Account.find({"Balance": {$gt: 2000}}).pretty();

db.Account.update({"Acc_ID": "A01"}, {$inc: {"Balance": 500}});
db.Transaction.remove({"TType": "W"});










Q5


SQL

CREATE TABLE books (
    ISBN VARCHAR(10),
    Title VARCHAR(10),
    Author VARCHAR(10),
    Publisher VARCHAR(10),
    PRIMARY KEY(ISBN)
);

INSERT INTO books VALUES('123', 'T1', 'A1', 'P1');
INSERT INTO books VALUES('002', 'DB', 'A2', 'P2');
INSERT INTO books VALUES('003', 'T3', 'A3', 'P3');
INSERT INTO books VALUES('004', 'T4', 'A4', 'P4');
INSERT INTO books VALUES('005', 'T5', 'A5', 'P5');

CREATE TABLE student1 (
    usn VARCHAR(10),
    name VARCHAR(10),
    PRIMARY KEY(usn)
);

INSERT INTO student1 VALUES('S1', 'John');
INSERT INTO student1 VALUES('S2', 'Jane');
INSERT INTO student1 VALUES('S3', 'Alice');
INSERT INTO student1 VALUES('S4', 'Bob');
INSERT INTO student1 VALUES('S5', 'Charlie');

CREATE TABLE borrow (
    usn VARCHAR(10),
    ISBN VARCHAR(10),
    borrow_date DATE,
    FOREIGN KEY(usn) REFERENCES student1(usn),
    FOREIGN KEY(ISBN) REFERENCES books(ISBN)
);

INSERT INTO borrow VALUES('S1', '123', '2023-01-01');
INSERT INTO borrow VALUES('S2', '002', '2023-01-02');
INSERT INTO borrow VALUES('S3', '003', '2023-01-03');
INSERT INTO borrow VALUES('S1', '004', '2023-01-04');
INSERT INTO borrow VALUES('S4', '005', '2023-01-05');

SELECT * FROM books;
SELECT * FROM student1;
SELECT * FROM borrow;

select NAME from student1 where USN=(select USN from borrow where ISBN='123');
select NAME from student1 where USN=(select USN from borrow where ISBN=(select ISBN from books where TITLE='DB'));
select count(ISBN) from borrow group by USN;

MONGO

>db.createCollection("LIBRARY") 
>db.LIBRARY.insert({"ISBN":1122,"TITLE":'datbase',"AUTHOR":'ABC',"PUB LISHER":'selina',"SSN":2015,"date":'2017-05-29'}) >db.LIBRARY.insert({"ISBN":2233,"TITLE":'datbase',"AUTHOR":'DEF',"PUB LISHER":'mcgraw',"SSN":2016,"date":'2017-06-29' }) 

>db.LIBRARY.find().pretty()
>db.LIBRARY.find({"ISBN":1122},{"SSN":1,_id:0}).pretty()
>db.LIBRARY.find({"TITLE":'datbase'},{"SSN":1,_id:0}).pretty()  