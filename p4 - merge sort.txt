import time
import random
import matplotlib.pyplot as plt

def merge_sort(arr):
    if len(arr) > 1:
        mid = len(arr) // 2
        L = arr[:mid]
        R = arr[mid:]

        merge_sort(L)
        merge_sort(R)

        i = j = k = 0

        while i < len(L) and j < len(R):
            if L[i] < R[j]:
                arr[k] = L[i]
                i += 1
            else:
                arr[k] = R[j]
                j += 1
            k += 1

        while i < len(L):
            arr[k] = L[i]
            i += 1
            k += 1

        while j < len(R):
            arr[k] = R[j]
            j += 1
            k += 1

# Test and plot
n_values = [10, 100, 1000]
times = []

for n in n_values:
    arr = random.sample(range(n*2), n)
    start_time = time.time()
    merge_sort(arr)
    end_time = time.time()
    times.append(end_time - start_time)

plt.plot(n_values, times, label='Merge Sort')
plt.xlabel('Number of elements (n)')
plt.ylabel('Time taken (seconds)')
plt.legend()
plt.show()
